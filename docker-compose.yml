services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:${PGDATA}
    env_file:
      - ./.env
    environment:
      # TEST: ${TEST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGDATA: ${PGDATA}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 1s
      timeout: 3s
      retries: 3
      #start_period: 30s
    restart: always
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_db:/data
    restart: always
  # migrate:
  #   image: migrate/migrate:v4.17.1-amd64
  #   profiles: ["tools"]
  #   volumes:
  #     - ./backend/platform/migrations:/migrations
  #   entrypoint: ["migrate", "-path", "/migrations", "-database", "${DATABASE_URL}"]
  #   command: ["up"]
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   restart: on-failure
volumes:
  postgres_data:
  redis_db:
